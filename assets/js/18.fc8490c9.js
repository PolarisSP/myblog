(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{576:function(t,a,r){"use strict";r.r(a);var s=r(4),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("p",[t._v("选个好名字要花时间，但省下来的时间比花掉的多。注意命名，而且一旦发现有更好的名称，就要换掉旧的。\n变量、函数、或类的名称应该已经答复了所有的大问题。它该告诉你，它为什么会存在，它做什么事，应该怎么用。如果名称需要注释来补充，那就不算是名副其实。")]),t._v(" "),r("h3",{attrs:{id:"名副其实"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#名副其实"}},[t._v("#")]),t._v(" 名副其实")]),t._v(" "),r("p",[t._v("对于变量的命名，根据业务来具体命名。不可使用a、b等，对于魔鬼数字，要使用枚举或者定义为常量。")]),t._v(" "),r("h3",{attrs:{id:"避免误导"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免误导"}},[t._v("#")]),t._v(" 避免误导")]),t._v(" "),r("p",[t._v("命名不要过于相似，最好不要用accountList来指称一组账号。")]),t._v(" "),r("h3",{attrs:{id:"做有意义的区分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#做有意义的区分"}},[t._v("#")]),t._v(" 做有意义的区分")]),t._v(" "),r("p",[t._v("例如，需要复制属性，源对象使用source，目标对象使用destination。假如你有一个Product类，请不要使用ProductData或者ProductInfo来命名，虽然名称不同，但意思却无区别。")]),t._v(" "),r("h3",{attrs:{id:"使用读得出来的名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用读得出来的名称"}},[t._v("#")]),t._v(" 使用读得出来的名称")]),t._v(" "),r("p",[t._v("便于记忆和沟通")]),t._v(" "),r("h3",{attrs:{id:"使用可搜索的名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用可搜索的名称"}},[t._v("#")]),t._v(" 使用可搜索的名称")]),t._v(" "),r("p",[t._v("例如，找MAX_CLASSES_PER_STUDENT很容易，但想找数字7就麻烦了，它可能是某些文件名或其他常量定义的一部分，出现在因不同意图而采用的各种表达式中。如果该常量是个长数字，又被人错改过，就会逃过搜索，从而造成错误。")]),t._v(" "),r("h3",{attrs:{id:"避免使用编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免使用编码"}},[t._v("#")]),t._v(" 避免使用编码")]),t._v(" "),r("p",[t._v("把类型或作用域编进名称里面，徒然增加了解码的负担。")]),t._v(" "),r("h3",{attrs:{id:"避免思维映射"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免思维映射"}},[t._v("#")]),t._v(" 避免思维映射")]),t._v(" "),r("p",[t._v("单字母变量名就是个问题。在作用域较小、也没有名称冲突时，循环计数器自然有可能被命名为i或j或k。（但千万别用字母l！）这是因为传统上惯用单字母名称做循环计数器。然而，在多数其他情况下，单字母名称不是个好选择；读者必须在脑中将它映射为真实概念。")]),t._v(" "),r("h3",{attrs:{id:"类名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类名"}},[t._v("#")]),t._v(" 类名")]),t._v(" "),r("p",[t._v("类名和对象名应该是名词或名词短语，类名不应当是动词。")]),t._v(" "),r("h3",{attrs:{id:"方法名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法名"}},[t._v("#")]),t._v(" 方法名")]),t._v(" "),r("p",[t._v("方法名应当是动词或动词短语。属性访问器、修改器和断言应该根据其值命名，并依Javabean标准[10]加上get、set和is前缀\n重载构造器时，使用描述了参数的静态工厂方法名。通常好于直接使用有参构造，可以将相应构造器设置为private，强制使用这种命名手段。")]),t._v(" "),r("h3",{attrs:{id:"每个概念对应一个词"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#每个概念对应一个词"}},[t._v("#")]),t._v(" 每个概念对应一个词")]),t._v(" "),r("p",[t._v("给每个抽象概念选一个词，并且一以贯之。例如，使用fetch、retrieve和get来给在多个类中的同种方法命名。")]),t._v(" "),r("h3",{attrs:{id:"避免双关语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免双关语"}},[t._v("#")]),t._v(" 避免双关语")]),t._v(" "),r("p",[t._v("避免将同一单词用于不同目的。同一术语用于不同概念，基本上就是双关语了。如果遵循“一词一义”规则，可能在好多个类里面都会有add方法。只要这些add方法的参数列表和返回值在语义上等价，就一切顺利。")]),t._v(" "),r("h3",{attrs:{id:"使用解决方案领域名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用解决方案领域名称"}},[t._v("#")]),t._v(" 使用解决方案领域名称")]),t._v(" "),r("p",[t._v("记住，只有程序员才会读你的代码。所以，尽管用那些计算机科学（Computer Science，CS）术语、算法名、模式名、数学术语吧。")]),t._v(" "),r("h3",{attrs:{id:"使用源自所涉问题领域的名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用源自所涉问题领域的名称"}},[t._v("#")]),t._v(" 使用源自所涉问题领域的名称")]),t._v(" "),r("p",[t._v("如果不能用程序员熟悉的术语来给手头的工作命名，就采用从所涉问题领域而来的名称吧。至少，负责维护代码的程序员就能去请教领域专家了。")]),t._v(" "),r("h3",{attrs:{id:"添加有意义的语境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加有意义的语境"}},[t._v("#")]),t._v(" 添加有意义的语境")]),t._v(" "),r("p",[t._v("很少有名称是能自我说明的——多数都不能。反之，你需要用有良好命名的类、函数或名称空间来放置名称，给读者提供语境。如果没这么做，给名称添加前缀就是最后一招了。")])])}),[],!1,null,null,null);a.default=v.exports}}]);